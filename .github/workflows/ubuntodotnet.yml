# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
    paths:
      - '**.jpg'
      - '**.jpeg'
      - '**.png'
      - '**.webp'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Install Python 3
      uses: actions/setup-python@v1
      with:
        python-version: 3.11.6  

    - name: Create a temporary artifact downloads folder for graphs
      run: mkdir graphs       

    - name: Install Python pandas
      run: python -m pip install --upgrade pip pandas
          
    - name: Install Python matplotlib
      run: python -m pip install --upgrade pip matplotlib  
         
    - name: Install email
      run: sudo apt-get install mailutils        
      
    - name: Install Python pyinstaller
      run: python -m pip install --upgrade pip datetime

    - name: Install Python datetime
      run: pip install pyinstaller   

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore           
      
    - name: run
      run: dotnet run --project ConsoleApp1/ConsoleApp1.csproj
      
    - name: run python 
      run: python TestModel/testGraph/testGraph/testGraph.py     
      
    - name: send a graph 
      run:  mail -s "Graph" -A testplot.png super.kydryavuy2011@yandex.ru
      
    - name: moving artfact to temp folder
      run: |
        mv testplot.png graphs         
           
    - name: Step 3 - Use the Upload Artifact GitHub Action
      uses: actions/upload-artifact@v2
      with: 
        name: folder for graphs
        path: graphs
        #steps:
        
        
    - name: Compress Images
      uses: calibreapp/image-actions@main
      #with:
          # The `GITHUB_TOKEN` is automatically generated by GitHub and scoped only to the repository that is currently running the action. By default, the action canâ€™t update Pull Requests initiated from forked repositories.
          # See https://docs.github.com/en/actions/reference/authentication-in-a-workflow and https://help.github.com/en/articles/virtual-environments-for-github-actions#token-permissions
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        
        
#permission denied here        
    # - name: Adding markdown
      # run:  graphs/testplot.png>> $GITHUB_STEP_SUMMARY